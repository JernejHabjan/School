/*Connection name: poljubno
Hostname: pb.vaje.uni-lj.si
Username: pb
Pass: pbvaje
Default schema: vaje
*/

#1.1
SELECT ime
FROM jadralec
WHERE rating IN (0,2,4,6,8,10);
#ali
SELECT ime
FROM jadralec 
WHERE rating % 2 = 0;

#1.2 
#če rezultat poizvedbe ni prazen imajo nekateri čolni enako ime
SELECT c1.ime
FROM coln c1, coln c2
WHERE c1.cid != c2.cid AND c1.ime = c2.ime;
#dopolnjena rešitev z uporabo funkcije IF(pogoj, trueVrednost, falseVrednost)
SELECT IF( EXISTS (SELECT c1.ime
			FROM coln c1, coln c2
			WHERE c1.cid != c2.cid AND c1.ime = c2.ime),
			'Obstajajo čolni z enakim imenom.', 
			'Čolni z enakimi imeni ne obstajajo.') AS 'Odgovor';

#1.3
SELECT c.ime
FROM jadralec j JOIN rezervacija r USING(jid) JOIN coln c USING(cid)
WHERE dolzina > 35 and starost < 35;

#1.4
#naloga je enaka 1.2
#če rezultat poizvedbe ni prazen imajo nekateri jadralci enako ime
SELECT j1.ime
FROM jadralec j1, jadralec j2
WHERE j1.jid != j2.jid AND j1.ime = j2.ime;
#polepšana rešitev
SELECT IF( NOT EXISTS (SELECT j1.ime
			FROM jadralec j1, jadralec j2
			WHERE j1.jid != j2.jid AND j1.ime = j2.ime),
			'Da.', 
			'Ne.') AS 'Ali imajo vse jadralci različna imena?';

#1.5
SELECT j.ime
FROM jadralec j JOIN rezervacija r USING(jid) JOIN coln c USING(cid)
WHERE r.dan BETWEEN DATE('2006-06-21') AND DATE('2006-09-23')
		AND c.ime LIKE '%sun%';

#1.6
#stik s čolnom ni potreben
SELECT *
FROM jadralec LEFT JOIN rezervacija USING(jid) LEFT JOIN coln USING(cid);

#2.1
SELECT n.*
FROM aliansa a, igralec i, naselje n
WHERE a.aid = i.aid AND i.pid = n.pid
	AND alliance = 'Nwm';

#2.2 SAMO V SV
#To so tisti z naseljem v SV kvadrantu in hkrati ne obstaja naselje v drugih kvadrantih (MINUS)
SELECT DISTINCT aid, alliance
FROM aliansa a JOIN igralec i USING(aid) JOIN naselje n USING(pid)
WHERE x > 0 AND y > 0
	AND aid NOT IN(
				SELECT aid
				FROM aliansa a JOIN igralec i USING(aid) JOIN naselje n USING(pid)
				WHERE x <= 0 OR y <= 0);

#2.3 !!!!!!!!!!!!!!!!!!
#REGEXP in RLIKE lahko poljubno menjamo
#POZOR ker so znaki "[", "]" in "." rezervirani za regularne izraze jih iščemo z "[[]", "[]]" in "[.]"
SELECT n.village
FROM naselje n
WHERE village REGEXP '[[][0-9]{2}[]]'
	 OR village RLIKE '[[][0-9][.][0-9][]]';

#2.4
#Izpisanih je še nekaj atributov za lajžje preverjanje pravilnosti in razumevanje naloge
SELECT id, village, x, y, SQRT((x-30)*(x-30)+(y-20)*(y-20)) as Oddaljenost
FROM naselje n
WHERE (x-30)*(x-30)+(y-20)*(y-20) < 100*100 #računamo po evklidski razdalji
ORDER BY Oddaljenost ASC;

#2.5
SELECT DISTINCT i.pid, player
FROM naselje n JOIN igralec i USING(pid) JOIN pleme p USING(tid)
WHERE p.tribe = "Galci" AND n.population > 1000;

#3.1
#Naloga ima veliko rešitev. Tukaj je rešena z dvojnim gnezdenjem.
SELECT c.cid 
FROM coln c
WHERE c.dolzina > 35 AND c.cid IN
		(SELECT r.cid
		FROM rezervacija r
		WHERE r.jid IN
			(SELECT j.jid
			FROM jadralec j
			WHERE j.starost < 40));

#3.2
SELECT *
FROM jadralec LEFT JOIN rezervacija USING(jid)
ORDER BY jid;

#3.3
SELECT * 
FROM
	(SELECT * 									#jadralci, ki imajo rezervacije
	FROM jadralec JOIN rezervacija USING(jid) 
	UNION
	SELECT j.*, NULL, NULL						#plus tisti, ki nimajo rezervacije
	FROM jadralec j	
	WHERE j.jid NOT IN 	(
						SELECT jid 
						FROM jadralec JOIN rezervacija USING(jid) 
						)
	) AS unija 
ORDER BY unija.jid;								#zunanje gnezdenje je samo zato, da lahko izpis sortiramo po jid

#3.4
#krneki

#_____________ NOVE

#Rešitve DML SQL 1.teden
#Avtor: Matej Pičulin, Rok Gomišček

#Poiščite imena čolnov, ki so jih rezervirali vsi jadralci.
SELECT ime
FROM coln c
WHERE NOT EXISTS(
	SELECT jid
	FROM jadralec
	WHERE jid NOT IN(	
						SELECT jid
						FROM rezervacija r
						WHERE r.cid = c.cid
					)
);

#Preverite, ali so vsi čolni z dolžino nad 35 čevljev iste barve (s kvantifikatorji).
SELECT c.cid
FROM coln c
WHERE c.dolzina > 35 AND c.barva = ALL(
									SELECT c2.barva
									FROM coln c2
									WHERE c2.dolzina > 35
									);

#polešan izpis
SELECT IF (EXISTS(
				SELECT c.cid
				FROM coln c
				WHERE c.dolzina > 35 AND c.barva = ALL(
													SELECT c2.barva
											FROM coln c2
											WHERE c2.dolzina > 35
											)
				)
			,"Vsi čolni so enake barve."
			,"Barve čolnov se razlikujejo.") AS razlikujejo;


#Preverite, ali so vsi čolni z dolžino nad 35 čevljev iste barve (s skupinskimi operatorji).
SELECT COUNT(DISTINCT barva)
FROM coln
WHERE dolzina > 35;

#polepšan izpis
SELECT IF ( 1>=(SELECT COUNT(DISTINCT barva)
				FROM coln
				WHERE dolzina > 35)
			,"Vsi čolni so enake barve."
			,"Barve čolnov se razlikujejo.") AS razlikujejo;


#Izpišite šifre, imena čolnov in 
#število njihovih rezervacij urejeno 
#v padajočem vrstnem redu.

SELECT c.cid, c.ime, COUNT(*) AS St_rez
FROM coln c JOIN rezervacija r USING(cid)
GROUP BY c.cid, c.ime
ORDER BY St_rez DESC;
#Izpišite imena, šifre in število rezervacij  
#vsakega jadralca. Kdor ni rezerviral ničesar, 
#bo imel 0 rezervacij. Izpis uredite padajoče 
#po številu rezervacij in naraščajoče po imenu 
#jadralca.
SELECT j.jid, j.ime, COUNT(r.cid) AS St_rez
FROM jadralec j LEFT JOIN rezervacija r USING(jid)
GROUP BY j.jid, j.ime
ORDER BY St_rez DESC;
#Izpišite imena in šifre vseh jadralcev, ki so 
#rezervirali nadpovprečno število čolnov.
SELECT j.ime, j.jid
FROM jadralec j JOIN rezervacija r USING(jid)
GROUP BY j.jid, j.ime
HAVING COUNT(*) > 
				(SELECT AVG(rez.St_rez)
				FROM (SELECT COUNT(*) AS St_rez
				FROM rezervacija r
				GROUP BY r.jid) AS rez);
#Za vsako alianso izpišite njeno ime, 
#število njenih članov, število naselji 
#v aliansi ter skupno populacijo alianse.
SELECT a.alliance, COUNT(DISTINCT pid) AS St_clanov, 
			COUNT(*) AS St_naselji, SUM(population) AS Populacijaalianse
FROM aliansa a JOIN igralec i USING(aid) JOIN naselje n USING(pid)
WHERE aid != 0
GROUP BY a.aid, a.alliance;

#ali
SELECT alliance, COUNT(*) as players, SUM(tmp.sum) as population, SUM(tmp.cnt) as villages
FROM aliansa a JOIN igralec i USING(aid) JOIN 
	(SELECT pid, SUM(population) as sum, COUNT(*) as cnt
	FROM naselje
	GROUP BY pid
	) tmp USING(pid)
WHERE aid != 0
GROUP BY aid;

#Izpišite imena igralcev, ki imajo povprečno populacijo naselij več kot 700.
SELECT player, AVG(population)
FROM igralec i JOIN naselje n USING(pid)
GROUP BY pid
HAVING AVG(population) > 700;

#Izpišite imena alians, ki imajo vsaj 50 naselij. Pozor aid = 0 so igralci 
#brez alianse.
SELECT alliance
FROM aliansa a JOIN igralec i USING(aid) JOIN naselje n USING(pid)
WHERE aid != 0
GROUP BY aid
HAVING COUNT(*) >= 50;

#ali
SELECT alliance
FROM aliansa a JOIN igralec i USING(aid) JOIN 
	(SELECT pid, SUM(population) as sum, COUNT(*) as cnt
	FROM naselje
	GROUP BY pid
	) tmp USING(pid)
WHERE aid != 0
GROUP BY aid
HAVING COUNT(*) >= 50;

#Izpišite alinase, ki imajo vsaj 10 naselij na severu (y < 0) 
#in imajo hkrati vsaj polovico svojih naselji na severu.

SELECT alliance, COUNT(*)
FROM aliansa a JOIN igralec i USING(aid) JOIN naselje n USING(pid)
WHERE aid != 0 AND y > 0
GROUP BY aid, alliance
HAVING COUNT(*) > 10 AND COUNT(*) >= (SELECT COUNT(*)					
					FROM igralec i2 JOIN naselje n2 USING(pid)
					WHERE i2.aid = a.aid AND y <= 0					
					GROUP BY aid, alliance);

					
KO VSI ->NOT EXISTS!!!!!!!

SUM